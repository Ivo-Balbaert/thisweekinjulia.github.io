---
layout: post
title:  "This week in Julia: October 17"
date:   2014-10-18 20:00:00
categories: julia
---
This is the current draft for next-week's post.  Add things here you find valuable.  It'll auto-post next Friday!

Things to keep an eye on:
* Call overloading: [#8008](https://github.com/JuliaLang/julia/pull/8008)
* Documentation system: [#8588](https://github.com/JuliaLang/julia/pull/8588)
* Sane cat: [#8599](https://github.com/JuliaLang/julia/pull/8599)
* static compilation: [#8656](https://github.com/JuliaLang/julia/pull/8656)

# Major breaking changes

* As anticipated from last week's integer arithmetic change, the usage of `itrunc` to truncate integers into a specific type has been removed.  Since this is intrinsically a modular arithmetic calculation, `rem` is now the way to do this, with the idiomatic syntax being `1234 % Uint8 == 0xd2`.  ([#8648](https://github.com/JuliaLang/julia/pull/8648))

# Performance improvements

# Upcoming changes

# Package ecosystem

* A new compatibility package, [Compat.jl](https://groups.google.com/forum/#!searchin/julia-users/compat.jl/julia-users/Fobhly-DPNY/CzXOkJwVjN0J), was created to help package authors transition to the new syntaxes in 0.4.  See the [users list announcement](https://groups.google.com/forum/#!searchin/julia-users/compat.jl/julia-users/Fobhly-DPNY/CzXOkJwVjN0J) for more details.
* A new package, [GeometricalPredicates.jl](https://github.com/skariel/GeometricalPredicates.jl), provides fast, robust 2D and 3D geometrical predicates on generic point types.  See the announcement on the [julia-users mailing list for more details](https://groups.google.com/d/msg/julia-users/oTxuewsKMQw/_k1f5AOJx0sJ) for more details and some snazzy images:

[![Sample image](http://i.imgur.com/Gxaqbnlm.jpg)](http://i.imgur.com/Gxaqbnl.jpg)
